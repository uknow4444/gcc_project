#include<stdio.h>

int linear_search(int a[], int n, int val, int *count);
int binary_search(int a[], int n, int val, int *count);
void result(result);

int main(void) {
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int n = sizeof(arr)/4; // 배열의 크기
	int val, count = 0;

	printf("찾고자 하는 값을 입력하세요. : ");
	scanf("%d", &val);

	result(linear_search(arr, n, val, &count));
	printf("선형탐색 횟수 : %d\n", count);

	count = 0;
	result(binary_search(arr, n, val, &count));
	printf("이진탐색 횟수 : %d\n", count);

	return 0;
}
int linear_search(int arr[], int n, int val, int *count) { // 순차탐색
	for (int i = 0; i < n; i++) {
		(*count)++;
		if (arr[i] == val)
			return 1;
	}
	return 0;
}
int binary_search(int arr[], int n, int val, int *count) { // 이진탐색
	int l = 0; // 탐색의 왼쪽 - 초기 배열의 시작
	int r = n - 1; // 탐색의 오른쪽 - 초기 배열의 끝
	int m;
	while (l < r) {
		m = (l + r) / 2;
		(*count)++;
		if (val > arr[m])
			l = m + 1;
		else if (val == arr[m])	
			return 1;
		else
			r = m;
	}
	return 0;
}

void result(int result) { // 찾는 값이 있는지 출력해주는 함수
	if (result == 1)
		printf("찾는 값이 배열에 있습니다!\n");
	else
		printf("찾는 값이 배열에 없습니다!\n");
}